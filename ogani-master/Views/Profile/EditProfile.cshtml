@model ogani_master.dto.UpdateProfileDto;
@using ogani_master.enums;

@{
    ViewData["Title"] = "Edit Profile";
    User? user = ViewBag.CurrentUser;
}

@section Styles {
    <style>
        .invalid-feedback {
            display: block !important;
        }

        .edit-profile-container {
            max-width: 1000px;
            margin: 2rem auto;
            background: #fff;
            border-radius: 20px;
            box-shadow: 0 0 20px rgba(0,0,0,0.05);
            padding: 2rem;
        }

        .form-header {
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e2e8f0;
        }

        .form-header h1 {
            color: #2d3748;
            font-size: 1.5rem;
            margin: 0;
        }

        .form-group {
            display: grid;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .form-row {
            display: flex;
            gap: 1.5rem;
        }

        .form-field {
            flex: 1;
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            color: #4a5568;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 10px;
            background: #f8fafc;
            color: #2d3748;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #4C51BF;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(76, 81, 191, 0.1);
        }

        .profile-photo-edit {
            margin-bottom: 2rem;
            text-align: center;
        }

        .photo-preview {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            margin: 0 auto 1rem;
            border: 5px solid #fff;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
            overflow: hidden;
            position: relative;
        }

        .photo-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .photo-upload-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: #EBF4FF;
            color: #4C51BF;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .photo-upload-btn:hover {
            background: #E3EEFF;
        }

        .form-buttons {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid #e2e8f0;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: #4C51BF;
            color: white;
            border: none;
        }

        .btn-primary:hover {
            background: #434190;
        }

        .btn-secondary {
            background: #f7fafc;
            color: #4a5568;
            border: 1px solid #e2e8f0;
        }

        .btn-secondary:hover {
            background: #edf2f7;
        }

        .select-control {
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%234a5568' viewBox='0 0 16 16'%3E%3Cpath d='M8 10l4-4H4z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            padding-right: 2.5rem;
        }

        media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .edit-profile-container {
                margin: 1rem;
                padding: 1.5rem;
            }

            .form-buttons {
                flex-direction: column-reverse;
            }

            .btn {
                width: 100%;
            }
        }
    </style>
}

<form asp-action="UpdateProfile" asp-controller="Auth" method="post" enctype="multipart/form-data" class="edit-profile-container">
       @Html.AntiForgeryToken();

    <div class="form-header">
        <h1>Edit Profile</h1>
    </div>

    <div class="profile-photo-edit">
        <div class="photo-preview">
            <img src="@user.ProfilePictureUrl" alt="Profile Photo" id="photoPreview">
        </div>
        <input type="file" id="photoUpload" asp-for="ProfilePictureUrl" hidden accept="image/*" onchange="previewImage(this)">
        <button type="button" class="photo-upload-btn" onclick="document.getElementById('photoUpload').click()">
            <i class="fas fa-camera"></i>
            Change Photo
        </button>
        <div class="invalid-feedback">
            @Html.ValidationMessageFor(m => m.ProfilePictureUrl)
        </div>
    </div>

    <div class="form-group">
        <div class="form-row">
            <div class="form-field">
                <label class="form-label">First Name</label>
                <input type="text" class="form-control" asp-for="FirstName" value="@user.FirstName" required>
                <div class="invalid-feedback">
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
            </div>
            <div class="form-field">
                <label class="form-label">Last Name</label>
                <input type="text" class="form-control" asp-for="LastName" value="@user.LastName" required>
                <div class="invalid-feedback">
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
        </div>

        <div class="form-field">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" asp-for="Email" value="@user.Email" required>
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(m => m.Email)
            </div>
        </div>

        <div class="form-field">
            <label class="form-label">Phone</label>
            <input type="tel" class="form-control" asp-for="Phone" value="@user.Phone">
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
        </div>

        <div class="form-row">
            <div class="form-field">
                <label class="form-label">Gender</label>
                <select asp-for="Gender" class="form-control select-control">
                    <option value="1" selected="@(user.Gender == true)">Male</option>
                    <option value="0" selected="@(user.Gender == false)" >Female</option>
                </select>
                <div class="invalid-feedback">
                    @Html.ValidationMessageFor(m => m.Gender)
                </div>
            </div>
        </div>

        <div class="form-field">
            <label class="form-label">Address</label>
            <input type="text" class="form-control" asp-for="Address" value="@user.Address" />
            <div class="invalid-feedback">
                @Html.ValidationMessageFor(m => m.Address)
            </div>
        </div>
    </div>

    <div class="form-buttons">
        <a asp-controller="Auth" asp-action="ProfilePage" class="btn btn-secondary">Cancel</a>
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </div>
</form>

@section Scripts {
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    document.getElementById('photoPreview').src = e.target.result;
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}